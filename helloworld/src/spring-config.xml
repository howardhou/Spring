<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tool http://www.springframework.org/schema/tool/spring-tool.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>message</value>
            </list>
        </property>
    </bean>

    <bean id="personService" class="com.example.service.PersonService">
        <property name="name" value="hello world"/>
    </bean>
    <!--配置一个 prototype Bean-->
    <bean id="personService2" class="com.example.service.PersonService" scope="prototype">
        <property name="name" value="hello world"/>
    </bean>

    <bean id="chinese" class="com.example.service.Chinese">
        <!--设值注入-->
        <!--<property name="axe" ref="stealAxe"/>-->
        <!--使用构造注入-->
        <constructor-arg ref="stoneAxe" />
    </bean>
    <bean id="stoneAxe" class="com.example.service.StoneAxe" />
    <bean id="stealAxe" class="com.example.service.SteelAxe" />

    <!--配置监听器-->
    <bean class="com.example.listener.EmailNotifier" />

    <!--设置普通属性值-->
    <bean id="achinese" class="com.example.service.Chinese">
        <constructor-arg name="name" value="houdongdong" />
        <constructor-arg name="age" value="32" />
        <constructor-arg name="height" value="7.3" />
    </bean>
    <!--注入集合值-->
    <bean id="chinese2" class="com.example.service.Chinese">
        <!--配置List属性-->
        <property name="schools">
            <list>
                <value>小学</value>
                <value>中学</value>
                <value>大学</value>
            </list>
        </property>
        <!--配置 Map 属性-->
        <property name="scores">
            <map>
                <entry key="语文" value="87"/>
                <entry key="英语" value="89"/>
                <entry key="数学" value="97"/>
            </map>
        </property>
        <!--配置 Map 属性-->
        <property name="phaseAxes">
            <map>
                <entry key="原始社会" value-ref="stoneAxe"/>
                <entry key="农业社会" value-ref="stealAxe"/>
            </map>
        </property>
        <!--配置 Properties 属性-->
        <property name="health">
            <props>
                <prop key="血压">正常</prop>
                <prop key="身高">178</prop>
            </props>
        </property>
        <!--配置 set 属性-->
        <property name="axes">
            <set>
                <value>普通的字符串</value>
                <bean class="com.example.service.SteelAxe"/>
            </set>
        </property>
        <property name="books">
            <list>
                <value>明朝那些事</value>
                <value>三体</value>
                <value>算法指引</value>
            </list>
        </property>
    </bean>
    <!--复合属性-->
    <bean id="chinese3" class="com.example.service.Chinese">
        <property name="axe" ref="stealAxe" />
        <property name="axe.name" value="鬼斧神工" />
    </bean>

    <!--以XML配置为主时，需要让XML配置能加载Java 的配置类-->
    <context:annotation-config />
    <bean class="com.example.SpringConfig" />

    <!-- 使用静态工厂创建Bean , Bean 由静态工厂负责创建，静态工厂(BeingFactory)由Spring容器负责管理 -->
    <bean id="dog" class="com.example.factory.BeingFactory" factory-method="getBeing">
        <!--配置静态工厂方法的参数-->
        <constructor-arg value="dog" />
        <!--注入dog的属性值-->
        <property name="msg" value="我是狗" />
    </bean>
    <bean id="cat" class="com.example.factory.BeingFactory" factory-method="getBeing">
        <constructor-arg value="cat" />
        <property name="msg" value="我是猫" />
    </bean>

    <!-- 使用实例工厂创建Bean, Bean 由实例工厂负责创建，实例工厂(PersonFactory)由Spring容器负责创建和管理-->
    <bean id="personFactory" class="com.example.factory.PersonFactory" />
    <bean id="chinese5" factory-bean="personFactory" factory-method="getPerson">
        <constructor-arg value="chinese" />
    </bean>
    <bean id="american" factory-bean="personFactory" factory-method="getPerson">
        <constructor-arg value="american" />
    </bean>
</beans>